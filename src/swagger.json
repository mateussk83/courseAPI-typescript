{
  "openapi": "3.0.0",
  "info": {
    "title": "Rentx Documentation",
    "description": "This is an API Cars",
    "version": "1.0.0",
    "contact": {
      "email": "mateussk83@gmail.com"
    }
  },
  "paths": {
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "category name sample",
                  "description": "category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List all categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "types": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": ["Category"],
        "summary": "Upload a new category",
        "description": "Uploada new category",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specifications"],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Specifications Already Exists!"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a User",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "driver_license": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "category name sample",
                  "email": "category email sample",
                  "driver_license": "category driver_license sample",
                  "password": "category password sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Users"],
        "summary": "query the user",
        "description": "query the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "category email sample",
                  "password": "category password sample"
                }
              }
            },
            "Bearer": {
              "securitySchemes": {
                "bearerAuth": {
                  "type": "http",
                  "scheme": "bearer",
                  "bearerFormat": "JWT",
                  "description": "JWT Authorization header using the Bearer Scheme."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Ok"
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Insert avatar img ",
        "description": "insert avatar img in User",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format":"binary"
                }
              }
            },
            "Bearer": {
              "securitySchemes": {
                "bearerAuth": {
                  "type": "http",
                  "scheme": "bearer",
                  "bearerFormat": "JWT",
                  "description": "JWT Authorization header using the Bearer Scheme."
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      }
    },
    "definitions": {
      "Specification": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    }
  }
  }
}